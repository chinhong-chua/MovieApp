@model MovieApp.ViewModel.CustomerFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-3">
    <h2>New Customer</h2>
    @using (Html.BeginForm("Save", "Customers"))
    {
        @*@Html.ValidationSummary()*@
        @Html.ValidationSummary(true,"Please fill in the fields correctly")
        <div class="form-group">
            @Html.LabelFor(m => m.Customer.Name)
            @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m=>m.Customer.Name)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Customer.BirthDate)
            @Html.TextBoxFor(m => m.Customer.BirthDate, "{0:dd MMM yyyy}", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Customer.BirthDate)
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.Customer.MembershipTypeId)
            @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Type", new { @class = "form-select" })
            @Html.ValidationMessageFor(m=>m.Customer.MembershipTypeId)

        </div>

        <div class="form-check mt-3">
            <label class="form-check-label">
                @Html.CheckBoxFor(m => m.Customer.IsSubscribed, new { @class = "form-check-input" })
                Subscribed to Newsletter
            </label>
        </div>

        @* if not declaring customer view model, use this to initiate id @Html.Hidden("Movie.Id", (Model.Customer != null) ? Model.Customer.Id :0)*@
        @Html.HiddenFor(m=>m.Customer.Id)
        @Html.AntiForgeryToken()
        <div class="form-group mt-3">
            <button type="submit" class="btn btn-outline-success">Save</button>
        </div>
    }
</div>

@section scripts
{
    @*Render validation at client side*@
    @Scripts.Render("~/bundles/jqueryval")
}

